@model EmployeeManagementSystem.Models.Attendance

@{
    ViewData["Title"] = "Edit Attendance";
}

<!-- Animate.css & FontAwesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet" />

<style>
    :root {
        --primary-color: #6c5ce7;
        --secondary-color: #00cec9;
        --success-color: #00b894;
    }

    .form-box {
        background: #fff;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);
        margin-top: 2rem;
        transition: all 0.3s ease;
    }

    .page-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1.5rem;
        border-radius: 12px;
        margin-bottom: 2rem;
        box-shadow: 0 10px 20px rgba(108, 92, 231, 0.2);
    }

    .btn-purple {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s;
        border-radius: 8px;
    }

        .btn-purple:hover {
            background-color: #5e50d6;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.4);
        }

    .success-notification {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
        background-color: white;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 5px 25px rgba(0, 0, 0, 0.15);
        border-left: 5px solid var(--success-color);
        display: flex;
        align-items: center;
        max-width: 500px;
        width: 90%;
    }

    .notification-icon {
        background-color: rgba(0, 184, 148, 0.1);
        color: var(--success-color);
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        margin-right: 1rem;
    }

    .countdown-timer {
        background-color: var(--success-color);
        color: white;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        margin-left: auto;
    }

    .form-control {
        border-radius: 8px;
        padding: 10px 15px;
        border: 1px solid #e0e0e0;
        transition: all 0.3s;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(108, 92, 231, 0.25);
        }
</style>

<div class="container py-4">
    <div class="page-header animate__animated animate__fadeInDown">
        <h2 class="mb-0"><i class="fas fa-edit me-2"></i>Edit Attendance</h2>
    </div>

    <div class="form-box animate__animated animate__fadeInUp">
        <form id="editAttendanceForm" asp-action="EditMark" method="post">
            <input type="hidden" asp-for="Id" />

            <div class="mb-3">
                <label asp-for="EmployeeId" class="form-label">Employee</label>
                <select asp-for="EmployeeId" class="form-control" asp-items="ViewBag.Employees">
                    <option value="">-- Select Employee --</option>
                </select>
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="AttendanceDate" class="form-label">Date</label>
                <input asp-for="AttendanceDate" type="date" class="form-control" />
                <span asp-validation-for="AttendanceDate" class="text-danger"></span>
            </div>

            <div class="mb-4">
                <label asp-for="Status" class="form-label">Status</label>
                <select asp-for="Status" class="form-control">
                    <option value="">-- Select Status --</option>
                    <option>Present</option>
                    <option>Absent</option>
                    <option>Leave</option>
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-purple me-2">
                <i class="fas fa-save me-1"></i> Update Attendance
            </button>
            <a asp-action="Attendance" class="btn btn-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back
            </a>
        </form>
    </div>
</div>

<!-- Success Notification (hidden initially) -->
<div id="successNotification" class="success-notification animate__animated animate__fadeInDown" style="display: none;">
    <div class="notification-icon">
        <i class="fas fa-check"></i>
    </div>
    <div>
        <h5 class="mb-1">Attendance Updated Successfully!</h5>
        <p class="mb-0">Redirecting in <span id="countdownText">3</span> seconds...</p>
    </div>
    <div class="countdown-timer" id="countdown">3</div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.getElementById('editAttendanceForm').addEventListener('submit', function(e) {
            e.preventDefault();

            // Submit form via AJAX
            fetch(this.action, {
                method: this.method,
                body: new FormData(this)
            })
            .then(response => {
                if (response.ok) {
                    // Show success notification
                    const notification = document.getElementById('successNotification');
                    notification.style.display = 'flex';

                    // Start countdown
                    let seconds = 3;
                    const countdownElement = document.getElementById('countdown');
                    const countdownText = document.getElementById('countdownText');

                    const countdownInterval = setInterval(() => {
                        seconds--;
                        countdownElement.textContent = seconds;
                        countdownText.textContent = seconds;

                        if (seconds <= 0) {
                            clearInterval(countdownInterval);
                            window.location.href = '@Url.Action("Attendance")';
                        }
                    }, 1000);
                } else {
                    alert('Error updating attendance. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred. Please try again.');
            });
        });
    </script>
}