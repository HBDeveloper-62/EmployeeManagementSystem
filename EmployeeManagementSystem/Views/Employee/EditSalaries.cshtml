@model EmployeeManagementSystem.Models.Salary
@{
    ViewData["Title"] = "Edit Salary";
    var employees = ViewBag.Employees as List<EmployeeManagementSystem.Models.Employee>;
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<!-- Font Awesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<!-- Animate.css -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet" />

<style>
    :root {
        --primary-color: #6c5ce7;
        --secondary-color: #00cec9;
        --success-color: #00b894;
    }

    .success-message {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
        background-color: white;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 5px 25px rgba(0, 0, 0, 0.15);
        border-left: 5px solid var(--success-color);
        display: flex;
        align-items: center;
        max-width: 500px;
        width: 90%;
    }

    .success-icon {
        background-color: rgba(0, 184, 148, 0.1);
        color: var(--success-color);
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        margin-right: 1rem;
    }

    .countdown {
        background-color: var(--success-color);
        color: white;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        margin-left: auto;
    }

    .form-container {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .btn-success {
        background-color: var(--success-color);
        border: none;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s;
        border-radius: 8px;
    }

        .btn-success:hover {
            background-color: #00a382;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 184, 148, 0.3);
        }
</style>

<div class="container py-4">
    <div class="page-header animate__animated animate__fadeIn">
        <h2><i class="fas fa-money-bill-wave"></i> Edit Salary Details</h2>
    </div>

    <div class="form-container animate__animated animate__fadeIn">
        <form id="salaryForm" asp-action="EditSalaries" method="post">
            @* Hidden field for ID *@
            <input type="hidden" asp-for="Id" />

            <div class="col-md-6">
                <div class="form-floating">
                    <select asp-for="EmployeeId" asp-items="@(new SelectList(ViewBag.Employees, "Id", "FullName", Model.EmployeeId))" class="form-select">
                        <option value="">-- Select Employee --</option>
                    </select>
                    <label asp-for="EmployeeId">Employee</label>
                    <span asp-validation-for="EmployeeId" class="text-danger small"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="BasicSalary" class="form-label">Basic Salary</label>
                <input asp-for="BasicSalary" class="form-control" type="number" step="0.01" />
                <span class="text-danger" asp-validation-for="BasicSalary"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Allowance" class="form-label">Allowance</label>
                <input asp-for="Allowance" class="form-control" type="number" step="0.01" />
                <span class="text-danger" asp-validation-for="Allowance"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Deductions" class="form-label">Deductions</label>
                <input asp-for="Deductions" class="form-control" type="number" step="0.01" />
                <span class="text-danger" asp-validation-for="Deductions"></span>
            </div>

            <div class="mb-3">
                <label asp-for="SalaryMonth" class="form-label">Salary Month</label>
                <input asp-for="SalaryMonth" class="form-control" type="month" />
                <span class="text-danger" asp-validation-for="SalaryMonth"></span>
            </div>

            <button type="submit" class="btn btn-success">
                <i class="fas fa-save me-1"></i> Save Changes
            </button>
            <a asp-action="Salaries" class="btn btn-secondary ms-2">
                <i class="fas fa-arrow-left me-1"></i> Back
            </a>
        </form>
    </div>
</div>

<!-- Success Message Template (hidden by default) -->
<div id="successMessage" class="success-message animate__animated animate__fadeInDown" style="display: none;">
    <div class="success-icon">
        <i class="fas fa-check"></i>
    </div>
    <div>
        <h5 class="mb-1">Salary Updated Successfully!</h5>
        <p class="mb-0">You'll be redirected back shortly...</p>
    </div>
    <div class="countdown" id="countdown">3</div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById('salaryForm').addEventListener('submit', function(e) {
            e.preventDefault();

            // Submit form via AJAX
            fetch(this.action, {
                method: this.method,
                body: new FormData(this)
            })
            .then(response => {
                if (response.ok) {
                    // Show success message
                    const successMessage = document.getElementById('successMessage');
                    successMessage.style.display = 'flex';

                    // Start countdown
                    let seconds = 3;
                    const countdownElement = document.getElementById('countdown');
                    const countdownInterval = setInterval(() => {
                        seconds--;
                        countdownElement.textContent = seconds;

                        if (seconds <= 0) {
                            clearInterval(countdownInterval);
                            window.location.href = '@Url.Action("Salaries")';
                        }
                    }, 1000);
                } else {
                    alert('Error updating salary. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred. Please try again.');
            });
        });
    </script>
}